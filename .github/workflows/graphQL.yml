# .github/workflows/graphql-smoke-tests.yml
name: CI - GraphQL Smoke Tests (OAuth2 login)

on:
  push:
    branches: [ pipelines ]
  pull_request:
    branches: [ pipelines ]

jobs:
  graphql-introspection:
    name: GraphQL Introspection Smoke Tests (port 33001)
    runs-on: ubuntu-latest

    env:
      TZ: Europe/Prague
      # Přihlašovací údaje: demo uživatel
      DEMO_EMAIL: john.newbie@world.com
      DEMO_PASSWORD: john.newbie@world.com

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start Docker Compose stack
        run: |
          echo "==> Spouštím Docker Compose stack na pozadí..."
          docker compose -f docker-compose.hk2025.yml up -d --build

      - name: Wait for services to be healthy
        run: |
          echo "Čekám 30 sekund, aby služby absolvovaly healthcheck..."
          sleep 30

      - name: Check running containers
        run: |
          echo "=== Seznam všech Docker kontejnerů před introspekcí: ==="
          docker ps -a

      - name: Perform OAuth2 login (get session cookie)
        run: |
          echo "==> 1) STAHUJI login stránku (pro získání 'key' a počáteční cookie)…"
          # Soubor pro počáteční cookies a HTML
          COOKIE_INIT="cookie_init.txt"
          LOGIN_HTML="login.html"
          LOGIN_URL="http://localhost:33001/oauth/login2?redirect_uri=/"

          # 1. Stáhnout login formulář (GET) a uložit cookie_init.txt + login.html
          curl -s -L "$LOGIN_URL" \
            -c "$COOKIE_INIT" \
            -o "$LOGIN_HTML"

          # 2. Ze staženého HTML vyextrahovat hodnotu skrytého pole 'key'
          echo "==> 2) EXTRAHUJI 'key' ze staženého HTML…"
          KEY=$(grep -oP 'name="key".*?value=\K[^ >]+' "$LOGIN_HTML" || true)
          if [ -z "$KEY" ]; then
            echo "❌ Chyba: Nepodařilo se najít hodnotu 'key' v $LOGIN_HTML!"
            exit 1
          fi
          echo "→ Nalezen KEY: $KEY"

          # 3. Provedu POST přihlášení se username, password a key; nové cookie se uloží do cookies.txt
          echo "==> 3) POSÍLÁM POST s přihlášením (username + password + key)…"
          COOKIE_JAR="cookies.txt"
          curl -s -L "$LOGIN_URL" \
            -b "$COOKIE_INIT" \
            -c "$COOKIE_JAR" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "username=${{ env.DEMO_EMAIL }}" \
            -d "password=${{ env.DEMO_PASSWORD }}" \
            -d "key=${KEY}" \
            -o /dev/null

          # Ověření, že cookies.txt není prázdný
          if [ ! -s "$COOKIE_JAR" ]; then
            echo "❌ Chyba: Nepodařilo se uložit cookie do $COOKIE_JAR."
            exit 1
          fi

          # Zkontrolujeme, zda cookies.txt obsahuje položku 'authorization'
          if ! grep -iq "authorization" "$COOKIE_JAR"; then
            echo "❌ Chyba: V $COOKIE_JAR nebyla nalezena cookie 'authorization'!"
            echo "Podívejte se prosím do $LOGIN_HTML, zda login funguje, nebo jestli server nevrátil chybu."
            exit 1
          fi

          echo "✅ OAuth2 login OK, cookie (authorization) uložena do $COOKIE_JAR."
        shell: bash

      - name: HEAD request na GraphQL endpoint s cookie
        run: |
          echo "==> HEAD request na http://localhost:33001/api/gql s cookie…"
          COOKIE_JAR="cookies.txt"

          # HEAD (nebo GET, pokud HEAD není podporováno)
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:33001/api/gql \
            -b "$COOKIE_JAR" -X HEAD)

          echo "HTTP status: $HTTP_STATUS"
          # 200 OK nebo 400/405 (Bad Request / Method Not Allowed) jsou akceptovatelné
          if [[ "$HTTP_STATUS" != "200" && "$HTTP_STATUS" != "400" && "$HTTP_STATUS" != "405" ]]; then
            echo "❌ Chyba: Endpoint vrací $HTTP_STATUS místo 200/400/405."
            exit 1
          fi
          echo "✅ HEAD request úspěšný (status $HTTP_STATUS)."
        shell: bash

      - name: GraphQL Introspection Check (curl + cookie)
        id: introspection
        run: |
          echo "==> Provedení introspekčního dotazu na http://localhost:33001/api/gql (s cookie)…"
          COOKIE_JAR="cookies.txt"

          # Introspekční GraphQL query
          INTROSPECTION_QUERY='{"query":"{ __schema { types { name } } }"}'
          RESPONSE=$(
            curl -s -X POST http://localhost:33001/api/gql \
              -H "Content-Type: application/json" \
              -b "$COOKIE_JAR" \
              -d "$INTROSPECTION_QUERY"
          )

          echo "=== Introspection response: ==="
          echo "$RESPONSE"

          # Ověříme, že odpověď obsahuje "__schema"
          echo "$RESPONSE" | grep '"__schema"' \
            && echo "✅ Introspection OK - nalezen klíč __schema." \
            || (echo "❌ Introspection selhala - nenalezen klíč __schema." && exit 1)

          # Uložíme JSON introspekce jako výstup kroku pro případné další zpracování
          echo "::set-output name=schema::$RESPONSE"
        shell: bash

      - name: Tear down Docker Compose stack
        if: always()
        run: |
          echo "==> Clean up: Ukončuji Docker Compose stack…"
          docker compose -f docker-compose.hk2025.yml down --volumes
        shell: bash
